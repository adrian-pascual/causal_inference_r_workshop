---
title: "Whole Game 2: Malaria and Mosquito Nets"
format: html
---

```{r}
#| label: setup
library(tidyverse)
library(broom)
library(rsample)
library(ggdag)
library(tipr)
library(propensity)
library(halfmoon)
```

## Whole Game 2: Malaria and Mosquito Nets

In this exercise, we'll attempt to answer a causal question: does mosquito bed net use reduce malaria risk? 

To answer this question, we'll use the causal inference methods we learned in this workshop. You may use any technique you prefer. If you have time, try more than one technique and compare the results. Remember the broad strokes we discussed today: 
c
1. Specify causal question (we just did this!)
2. Draw assumptions (via a causal diagram, which we'll do below)
3. Model assumptions (e.g. with a propensity score)
4. Analyze propensities (diagnostics)
5. Estimate causal effects 
6. Conduct a sensitivity analysis

We'll use simulated data, `net_data`, from the {causalworkshop} package, which includes ten variables: 
`id`
:    an ID variable
`net` and `net_num`
:    a binary variable indicating if the participant used a net (1) or didn't use a net (0)
`malaria_risk`
:    a risk of malaria scale ranging from 0-100
`income`
:    weekly income, measured in dollars
`health`
:    a health score scale ranging from 0–100
`household`
:    number of people living in the household
`eligible`
:    a binary variable indicating if the household is eligible for the free net program.
`temperature`
:    the average temperature at night, in Celsius
`resistance`
:    Insecticide resistance of local mosquitoes. This is measured on a scale of 0–100, with higher values indicating higher resistance.

Our thanks to Andrew Heiss for providing these data!

```{r}
library(causalworkshop)
net_data
```

Here's the DAG we are proposing. Make sure you confirm what the adjustment set is. 

```{r}
mosquito_dag <- dagify(
  malaria_risk ~ net + income + health + temperature + resistance,
  net ~ income + health + temperature + eligible + household,
  eligible ~ income + household,
  health ~ income,
  exposure = "net",
  outcome = "malaria_risk",
  coords = list(
    x = c(
      malaria_risk = 7,
      net = 3,
      income = 4,
      health = 5,
      temperature = 6,
      resistance = 8.5,
      eligible = 2,
      household = 1
    ),
    y = c(
      malaria_risk = 2,
      net = 2,
      income = 3,
      health = 1,
      temperature = 3,
      resistance = 2,
      eligible = 3,
      household = 2
    )
  ),
  labels = c(
    malaria_risk = "Risk of malaria",
    net = "Mosquito net",
    income = "Income",
    health = "Health",
    temperature = "Nighttime temperatures",
    resistance = "Insecticide resistance",
    eligible = "Eligible for program",
    household = "Number in the household"
  )
)

mosquito_dag |>
  tidy_dagitty() |>
  node_status() |>
  ggplot(
    aes(x, y, xend = xend, yend = yend, color = status)
  ) +
  geom_dag_edges() +
  geom_dag_point() +
  geom_dag_label_repel(
    aes(x, y, label = label),
    box.padding = 3.5, 
    inherit.aes = FALSE,
    max.overlaps = Inf, 
    seed = 10,
    label.size = NA, 
    label.padding = 0.1,
    size = 14 / 3
  ) +
  theme_dag(base_size = 14) +
  theme(legend.position = "none") +
  labs(caption = "Thanks to Andrew Heiss for the data!") +
  coord_cartesian(clip = "off")
```

# Your Turn

Now, conduct the causal analysis as you see fit! Feel free to work in groups and to ask us questions.

```{r}
propensity_model <- glm(
  malaria_risk ~ net,
  data = net_data,
  family = binomial()
)

seven_dwarfs_prop <- propensity_model |>
  augment(type.predict = "response", data = seven_dwarfs)










fit_ipw <- function(split, ...) { 
  .df <- analysis(split)
  
  # fit propensity score model
  propensity_model <- glm(
    malaria_risk ~ net,
    family = binomial(),
    data = .df
  )
  # calculate ATE weights
.df <- propensity_model |> 
  augment(type.predict = "response", data = .df) |>
  mutate(wts = wt_ate(.fitted, malaria_risk, exposure_type = "continuous"))
  # fit correctly bootstrapped ipw model 
  lm(net ~ malaria_risk, data = .df, weights = wts) |>
    tidy() 
}

set.seed(1234)

ipw_results <- bootstraps(net_data, 1000, apparent = TRUE) |>
  mutate(boot_fits = map(splits, fit_ipw)) 


ipw_results |>
  mutate(
    estimate = map_dbl(
      boot_fits,
      # pull the `estimate` for `net` for each fit
      \(.fit) .fit |>
        filter(term == "net") |>
        pull(estimate)
    )
  ) |>
  ggplot(aes(estimate)) +
  geom_histogram(fill = "#D55E00FF", color = "white", alpha = 0.8) + 
  theme_minimal()

boot_estimate <- int_t(ipw_results, boot_fits) |>
  filter(term == "net")

boot_estimate






# use adjust_coef_with_binary to adjust for this unmeasured cofounder
# second data set called net_data_full with 
```


